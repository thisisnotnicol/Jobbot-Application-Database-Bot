#!/usr/bin/env python3
"""
JobBot Slack Bot Starter - Fixed Version
Starts the improved Slack bot with better error handling and JSON parsing
"""

import os
import sys
import subprocess
import time
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Add src to path
script_dir = os.path.dirname(os.path.abspath(__file__))
src_dir = os.path.join(script_dir, 'src')
sys.path.insert(0, src_dir)

def check_environment():
    """Check if all required environment variables are set"""
    required_vars = [
        'OPENAI_API_KEY',
        'NOTION_TOKEN',
        'NOTION_DATABASE_ID',
        'SLACK_BOT_TOKEN',
        'SLACK_APP_TOKEN'
    ]

    missing = []
    for var in required_vars:
        if not os.getenv(var):
            missing.append(var)

    if missing:
        print("‚ùå Missing required environment variables:")
        for var in missing:
            print(f"   - {var}")
        print("\nPlease add these to your .env file")
        print("See SLACK_SETUP.md for detailed setup instructions")
        return False

    return True

def check_dependencies():
    """Check if required packages are installed"""
    try:
        import slack_bolt
        import openai
        import notion_client
        import requests
        import bs4
        return True
    except ImportError as e:
        print("‚ùå Missing required packages:")
        print(f"   {e}")
        print("\nInstall dependencies with:")
        print("   pip install -r requirements.txt")
        return False

def start_fixed_bot():
    """Start the fixed Slack bot"""
    try:
        # Import and run the fixed bot
        from enhanced_jobbot.slack_bot_fixed import main
        import asyncio

        print("ü§ñ Starting JobBot Slack Integration (Fixed Version)...")
        print("\n‚ú® Improvements in this version:")
        print("‚Ä¢ Fixed 'dispatch_failed' errors with better exception handling")
        print("‚Ä¢ Robust JSON parsing with multiple fallback strategies")
        print("‚Ä¢ Proper handling of Notion text length limits")
        print("‚Ä¢ Enhanced web scraping with fallback methods")
        print("‚Ä¢ Better logging and error reporting")
        print("‚Ä¢ Graceful degradation when services are unavailable")
        print("\nüéØ Ready to process job URLs! Try:")
        print("‚Ä¢ DM the bot with job URLs")
        print("‚Ä¢ @jobbot https://job-url.com in channels")
        print("‚Ä¢ /addjob https://job-url.com")
        print("\nPress Ctrl+C to stop")
        print("-" * 50)

        asyncio.run(main())

    except KeyboardInterrupt:
        print("\nüëã JobBot stopped by user")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå Error starting bot: {e}")
        print("\nTroubleshooting:")
        print("1. Check your .env file has all required variables")
        print("2. Verify Slack app is configured correctly")
        print("3. Run 'python check_config.py' to diagnose issues")
        print("4. Check slack_jobbot_fixed.log for detailed error logs")
        print("5. See SLACK_SETUP.md for detailed setup guide")
        sys.exit(1)

def main():
    print("üöÄ JobBot Slack Bot Starter (Fixed Version)")
    print("=" * 50)

    # Check environment
    print("üîç Checking environment variables...")
    if not check_environment():
        sys.exit(1)
    print("‚úÖ Environment variables OK")

    # Check dependencies
    print("üì¶ Checking dependencies...")
    if not check_dependencies():
        sys.exit(1)
    print("‚úÖ Dependencies OK")

    # Start fixed bot
    print("üéØ All checks passed!")
    print("üîß Starting FIXED version with improved error handling...")
    time.sleep(1)
    start_fixed_bot()

if __name__ == "__main__":
    main()
